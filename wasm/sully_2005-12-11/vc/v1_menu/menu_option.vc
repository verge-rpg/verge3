// menu_option.vc for Sully www.verge-rpg.com
// Zip 05/09/2004
// Last update 06/10/2004

//        -----------------
//       Option Menu
//        -----------------

void MenuControlOption()
{
	Menu1ArrowSetSounds( "MenuHappyBeep" );

	Menu2ArrowSetSounds( "MenuHappyBeep","MenuPageTurn" );

	if (menu_sub == 0)
	{
		MenuControlTwoArrows("menu_sub", 4, "menu_item", 5);
		if (menu_sub != 0) menu_item = 0;
	}
	else if (menu_sub == 2)
	{
		MenuControlTwoArrows("menu_sub", 4, "global_noscroll", 2);
	}
	else if (menu_sub == 3)
	{
		MenuControlTwoArrows("menu_sub", 4, "global_menuluc", 11);
	}
	else 
	{
		menu_sub = MenuControlArrows(menu_sub, 4);
	}
	
	if (MenuConfirm())
	{
		if (menu_sub == 0)
		{
			menu_cast = 0;
			if (menu_item < 4)
			{
				menu_start = menu_colour[menu_item];
				menu_idx = MenuGet("OptionRGB");
			}
			else MenuInitColours();
		}
		else if (menu_sub == 1)
		{
			menu_idx = MenuGet("OptionVol");
		}
	}
	if (MenuCancel())
	{
		Menu1ArrowSetSounds( "" );
		Menu2ArrowSetSounds( "","" );
		MenuHappyBeep();
		MenuRoot();
	}
}

void MenuDrawOption()
{
	MenuDisplayOption(MenuIsActive("Option"));
	if (menu_sub == 0)
	{
		PrintString(20, 32, screen, menu_font[0], ">");
		if (menu_item < 4) Rect(27 + (menu_item * 50), 47, 63 + (menu_item * 50), 83, menu_colour[2], screen);
		else Rect(166, 88, 214, 90+menu_fonth, menu_colour[2], screen);
	}
	else if (menu_sub == 1)
	{
		PrintString(20, 105, screen, menu_font[0], ">");

	}
	else if (menu_sub == 2)
	{
		PrintString(20, 150, screen, menu_font[0], ">");
	}
	else if (menu_sub == 3)
	{
		PrintString(20, 170, screen, menu_font[0], ">");
	}
}

void MenuDrawOptionVol()
{
	MenuDisplayOption(MenuIsActive("OptionVol"));
	Rect(20 + (menu_item * 65), 115, 86 + (menu_item * 65), 145, menu_colour[2], screen);
}

void MenuDisplayOption(int active)
{
	MenuBlitRight(0, menu_option);
	MenuDrawBackground(MENU_A_X1, MENU_A_Y1, MENU_A_X2, MENU_A_Y2, active);
	PrintRight(220, 15, screen, menu_font[0], "Option");
	PrintString(30, 32, screen, menu_font[0], "Interface colours");
	PrintString(170, 90, screen, menu_font[0], "Defaults");
	MenuBlitColour(0);
	MenuBlitColour(1);
	MenuBlitColour(2);
	MenuBlitColour(3);
	PrintString(30, 105, screen, menu_font[0], "Volume levels");
	PrintString(23, 118, screen, menu_font[0], "Music:");
	PrintString(88, 118, screen, menu_font[0], "FX:");
	PrintString(153, 118, screen, menu_font[0], "Menu:");
	MenuBlitSlider(0, global_music_volume);
	MenuBlitSlider(1, sfx_volume);
	MenuBlitSlider(2, interface_volume);
	PrintString(30, 150, screen, menu_font[0], "Text Scroll");
	PrintCenter(130, 150, screen, menu_font[0], "ON");
	PrintCenter(190, 150, screen, menu_font[0], "OFF");
	Rect(110 + (global_noscroll * 60), 148, 150 + (global_noscroll * 60), 159, menu_colour[2], screen);
	PrintString(30, 170, screen, menu_font[0], "Menu Lucency: " + str(global_menuluc*10) + "%");
}


void MenuControlOptionVol()
{
	if (menu_item == 0) menu_sub = global_music_volume;
	else if (menu_item == 1) menu_sub = sfx_volume;
	else if (menu_item == 2) menu_sub = interface_volume;
	if (!MenuControlFastArrows("menu_sub", 100, "menu_item", 3))
	{
		if (menu_item == 0)
		{
			global_music_volume =  menu_sub;
			SetMusicVolume(global_music_volume);
		}
		else if (menu_item == 1) sfx_volume = menu_sub;
		else if (menu_item == 2) interface_volume = menu_sub;
	}
	if (MenuConfirm() || MenuCancel())
	{
		MenuHappyBeep();
		menu_sub = 1;
		menu_idx = MenuGet("Option");
	}
}

void MenuControlOptionRGB()
{
	if (menu_cast == 0) menu_sub = GetR(menu_colour[menu_item]);
	else if (menu_cast == 1) menu_sub = GetG(menu_colour[menu_item]);
	else if (menu_cast == 2) menu_sub = GetB(menu_colour[menu_item]);
	if (!MenuControlFastArrows("menu_sub", 255, "menu_cast", 3))
	{
		if (menu_cast == 0) menu_colour[menu_item] = RGB(menu_sub, GetG(menu_colour[menu_item]), GetB(menu_colour[menu_item]));
		else if (menu_cast == 1) menu_colour[menu_item] = RGB(GetR(menu_colour[menu_item]), menu_sub, GetB(menu_colour[menu_item]));
		else if (menu_cast == 2) menu_colour[menu_item] = RGB(GetR(menu_colour[menu_item]), GetG(menu_colour[menu_item]), menu_sub);
	}
	if (MenuConfirm())
	{
		menu_cast = 0-1;
		menu_start = 0;
		menu_sub = 0;
		menu_idx = MenuGet("Option");
	}
	if (MenuCancel())
	{
		MenuHappyBeep();
		menu_cast = 0-1;
		menu_sub = 0;
		menu_colour[menu_item] = menu_start;
		menu_start = 0;
		menu_idx = MenuGet("Option");
	}
}

void MenuDrawOptionRGB()
{
	MenuDisplayOption(MenuIsActive("OptionRGB"));
	Rect(27 + (menu_item * 50), 47, 63 + (menu_item * 50), 83, menu_colour[2], screen);
	Rect(23 + (menu_cast * 65), 88, 87 + (menu_cast * 65), 102, menu_colour[2], screen);
	RectFill(25, 90, 85, 100, RGB(GetR(menu_colour[menu_item]), 0, 0), screen);
	RectFill(90, 90, 150, 100, RGB(0, GetG(menu_colour[menu_item]), 0), screen);
	RectFill(155, 90, 215, 100, RGB(0, 0, GetB(menu_colour[menu_item])), screen);
	PrintString(35, 92, screen, menu_font[0], "R:"+str(GetR(menu_colour[menu_item])));
	PrintString(100, 92, screen, menu_font[0], "G:"+str(GetG(menu_colour[menu_item])));
	PrintString(165, 92, screen, menu_font[0], "B:"+str(GetB(menu_colour[menu_item])));
}

// Displays a square of colour for options
void MenuBlitColour(int number)
{
	RectFill(30 + (number * 50), 50, 60 + (number * 50), 80, menu_colour[number], screen);
	Rect(29 + (number * 50), 49, 61 + (number * 50), 81, 0, screen);
}

// Displays a linear slider of pretty triangle type for options
void MenuBlitSlider(int number, int value)
{
	Triangle(23 + (number * 65), 140,
	 23 + (number * 65) + 60, 140,
	 23 + (number * 65) + 60, 140 - 15, 0, screen);
	Triangle(20 + (number * 65), 137,
	 20 + (number * 65) + (value * 60 / 100), 137,
	 20 + (number * 65) + (value * 60 / 100), 137 - (value * 15 / 100), menu_colour[2], screen);
}
