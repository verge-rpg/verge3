#define Menu_Collection 23
#define Menu_Collection2 24

#define save_year 0
#define save_month 1
#define save_day 2
#define save_hour 3
#define save_minute 4

int gIsNewGame;

void UpdateMenuCheck()
{
	if (gGUILength == 0)
	{
		GenerateMenu();
		AddCollection(Menu_Collection);
		AddCollection(Menu_Collection2);
	}
}

void TitleScreen()
{
	gStartup = 0;
	GenerateTitleScreen();
	AddCollection(Menu_Collection);
	AddCollection(Menu_Collection2);
}

void GenerateMenu()
{
	ClearCollection(Menu_Collection);
	ClearCollection(Menu_Collection2);

	AddTransparentRectangle(Menu_Collection, 2, 2, 320-4, 240-4, RGB(0,0,0), RGB(128,128,128), 20);
    AddTransparentRectangle(Menu_Collection, 10, 10, 320-95, 240-20, RGB(0,0,0), RGB(0,0,0), 20);
	AddButton2(Menu_Collection, 320-83, 16, -1, "iGenerateMenuMap");
	AddButton2(Menu_Collection, 320-83, 16+42, -1, "iGenerateMenuGlyphs");
	AddButton2(Menu_Collection, 320-83, 16+84, -1, "iGenerateMenuSave");
	AddButton2(Menu_Collection, 320-83, 16+126, -1, "iGenerateMenuLoad");
	AddButton2(Menu_Collection, 320-83, 16+168, -1, "iQuitGame");
	
	AddText(Menu_Collection, 320-68,16+17,"Map");
	AddText(Menu_Collection, 320-68,16+42+17,"Glyphs");
	AddText(Menu_Collection, 320-68,16+84+17,"Save");
	AddText(Menu_Collection, 320-68,16+126+17,"Load");
	AddText(Menu_Collection, 320-68,16+168+17,"Quit");
    
    iGenerateMenuMap();
}

void GenerateTitleScreen()
{
	ClearCollection(Menu_Collection);
	ClearCollection(Menu_Collection2);

	AddRectVGrad(Menu_Collection, 0, 0, ImageWidth(screen), ImageHeight(screen) / 2,
		RGB(0, 0, 0), RGB($39, $64, $4A));

	AddRectVGrad(Menu_Collection, 0, ImageHeight(screen) / 2, ImageWidth(screen), ImageHeight(screen),
		RGB($39, $64, $4A), RGB(0, 0, 0));
	AddGlowingImage(Menu_Collection, 10, 10, gTitleScreenImage);

	AddButton2(Menu_Collection, 320-81, 20, -1, "iNewGame");
	AddButton2(Menu_Collection, 320-81, 20+42, -1, "iGenerateMenuLoad");
	//AddButton2(Menu_Collection, 320-81, 20+80, -1, "iGenerateMenuSave");
	//AddButton2(Menu_Collection, 320-81, 20+120, -1, "iGenerateMenuLoad");
	AddButton2(Menu_Collection, 320-81, 20+160, -1, "iQuitGame");
	
	AddText(Menu_Collection, 320-68,20+12,"New");
	AddText(Menu_Collection, 320-66,20+22,"Game");
	AddText(Menu_Collection, 320-68,22+12+40,"Load");
	AddText(Menu_Collection, 320-66,22+22+40,"Game");
	//AddText(Menu_Collection, 320-66,20+80+17,"Save");
	//AddText(Menu_Collection, 320-66,20+120+17,"Load");
	AddText(Menu_Collection, 320-66,20+160+17,"Quit");
	AddSmallText(Menu_Collection, 10, 225,
		"By SDHawk, Thrasher, RMSephy, drumstick, and Overkill. August 2006.");
}

void iGenerateMenuMap()
{
	int i;

	RemoveCollectionNum(20);
	ClearCollection(Menu_Collection2);
    
	for (i = 1; i < val(gRoomList[0]); i++)
	{
		if (DictContains(gRoomFlags, gRoomList[i]))
		{
			if (!strcmp(gRoomList[i]+".map",gMap))
				AddImage2x(Menu_Collection2, 0, 20, DictGetInt(gRoomFlags, gRoomList[i]),1);
			else
			{
				AddImage2x(Menu_Collection2, 0, 20, DictGetInt(gRoomFlags, gRoomList[i]),0);
			}
		}
	}
    
    if (gFlags[FLAG_KNOWLEDGE_PRODUCTS])
        AddText(Menu_Collection2, 70, 45, "Products");
        
    if (gFlags[FLAG_KNOWLEDGE_MANUA])
    {
        AddText(Menu_Collection2, 20, 98, "Manu.");
        AddText(Menu_Collection2, 35, 106, "A");
    }
        
    if (gFlags[FLAG_KNOWLEDGE_MANUB])
        AddText(Menu_Collection2, 160, 190, "Manu.B");
        
    if (gFlags[FLAG_KNOWLEDGE_CPU])
        AddText(Menu_Collection2, 20, 200, "Supply/CPU");
}

void iGenerateMenuSave()
{
	RemoveCollectionNum(20);
	ClearCollection(Menu_Collection2);
    
	AddRectangle(Menu_Collection2, 105, 30, 115, 20, RGB(0,0,0), RGB(128,128,128));
	AddRectangle(Menu_Collection2, 105, 30+50, 115, 20, RGB(0,0,0), RGB(128,128,128));
	AddRectangle(Menu_Collection2, 105, 30+100, 115, 20, RGB(0,0,0), RGB(128,128,128));
	AddRectangle(Menu_Collection2, 105, 30+150, 115, 20, RGB(0,0,0), RGB(128,128,128));
	
	AddButton2(Menu_Collection2, 20, 20, 1, "iSave");
	AddButton2(Menu_Collection2, 20, 20+50, 2, "iSave");
	AddButton2(Menu_Collection2, 20, 20+100, 3, "iSave");
	AddButton2(Menu_Collection2, 20, 20+150, 4, "iSave");
	
	AddText(Menu_Collection2, 20+15,20+17,"Save");
	AddText(Menu_Collection2, 20+15,20+50+17,"Save");
	AddText(Menu_Collection2, 20+15,20+100+17,"Save");
	AddText(Menu_Collection2, 20+15,20+150+17,"Save");	
	
	
	GetSaveGameInfo(1);
	if (strcmp(gSaveInfo[save_year],"Unsaved"))
	{
	
		AddText(Menu_Collection2, 107,32,"1."+gSaveInfo[save_month]+"/"+gSaveInfo[save_day]+"/"+gSaveInfo[save_year]+"");
		AddText(Menu_Collection2, 107,32+10,"  "+gSaveInfo[save_hour]+":"+gSaveInfo[save_minute]+"");
	}
	else
	{
		AddText(Menu_Collection2, 107,32,"1. No Data");
	}
	
	GetSaveGameInfo(2);
	if (strcmp(gSaveInfo[save_year],"Unsaved"))
	{	
		AddText(Menu_Collection2, 107,32+50,"2."+gSaveInfo[save_month]+"/"+gSaveInfo[save_day]+"/"+gSaveInfo[save_year]+"");
		AddText(Menu_Collection2, 107,32+10+50,"  "+gSaveInfo[save_hour]+":"+gSaveInfo[save_minute]+"");
	}
	else
	{
		AddText(Menu_Collection2, 107,32+50,"2. No Data");
	}

	GetSaveGameInfo(3);
	if (strcmp(gSaveInfo[save_year],"Unsaved"))
	{	
		AddText(Menu_Collection2, 107,32+100,"3."+gSaveInfo[save_month]+"/"+gSaveInfo[save_day]+"/"+gSaveInfo[save_year]+"");
		AddText(Menu_Collection2, 107,32+10+100,"  "+gSaveInfo[save_hour]+":"+gSaveInfo[save_minute]+"");
	}
	else
	{
		AddText(Menu_Collection2, 107,32+100,"3. No Data");
	}
	
	GetSaveGameInfo(4);
	if (strcmp(gSaveInfo[save_year],"Unsaved"))
	{	
		AddText(Menu_Collection2, 107,32+150,"1."+gSaveInfo[save_month]+"/"+gSaveInfo[save_day]+"/"+gSaveInfo[save_year]+"");
		AddText(Menu_Collection2, 107,32+10+150,"  "+gSaveInfo[save_hour]+":"+gSaveInfo[save_minute]+"");	
	}
	else
	{
		AddText(Menu_Collection2, 107,32+150,"4. No Data");
	}
}

void iGenerateMenuLoad()
{
	RemoveCollectionNum(20);
	ClearCollection(Menu_Collection2);
    
	AddRectangle(Menu_Collection2, 105, 30, 115, 20, RGB(0,0,0), RGB(128,128,128));
	AddRectangle(Menu_Collection2, 105, 30+50, 115, 20, RGB(0,0,0), RGB(128,128,128));
	AddRectangle(Menu_Collection2, 105, 30+100, 115, 20, RGB(0,0,0), RGB(128,128,128));
	AddRectangle(Menu_Collection2, 105, 30+150, 115, 20, RGB(0,0,0), RGB(128,128,128));
	
	AddButton2(Menu_Collection2, 20, 20, 1, "iLoad");
	AddButton2(Menu_Collection2, 20, 20+50, 2, "iLoad");
	AddButton2(Menu_Collection2, 20, 20+100, 3, "iLoad");
	AddButton2(Menu_Collection2, 20, 20+150, 4, "iLoad");
	
	AddText(Menu_Collection2, 20+15,20+17,"Load");
	AddText(Menu_Collection2, 20+15,20+50+17,"Load");
	AddText(Menu_Collection2, 20+15,20+100+17,"Load");
	AddText(Menu_Collection2, 20+15,20+150+17,"Load");	
	
	
	GetSaveGameInfo(1);
	if (strcmp(gSaveInfo[save_year],"Unsaved"))
	{
	
		AddText(Menu_Collection2, 107,32,"1."+gSaveInfo[save_month]+"/"+gSaveInfo[save_day]+"/"+gSaveInfo[save_year]+"");
		AddText(Menu_Collection2, 107,32+10,"  "+gSaveInfo[save_hour]+":"+gSaveInfo[save_minute]+"");
	}
	else
	{
		AddText(Menu_Collection2, 107,32,"1. No Data");
	}
	
	GetSaveGameInfo(2);
	if (strcmp(gSaveInfo[save_year],"Unsaved"))
	{	
		AddText(Menu_Collection2, 107,32+50,"2."+gSaveInfo[save_month]+"/"+gSaveInfo[save_day]+"/"+gSaveInfo[save_year]+"");
		AddText(Menu_Collection2, 107,32+10+50,"  "+gSaveInfo[save_hour]+":"+gSaveInfo[save_minute]+"");
	}
	else
	{
		AddText(Menu_Collection2, 107,32+50,"2. No Data");
	}

	GetSaveGameInfo(3);
	if (strcmp(gSaveInfo[save_year],"Unsaved"))
	{	
		AddText(Menu_Collection2, 107,32+100,"3."+gSaveInfo[save_month]+"/"+gSaveInfo[save_day]+"/"+gSaveInfo[save_year]+"");
		AddText(Menu_Collection2, 107,32+10+100,"  "+gSaveInfo[save_hour]+":"+gSaveInfo[save_minute]+"");
	}
	else
	{
		AddText(Menu_Collection2, 107,32+100,"3. No Data");
	}
	
	GetSaveGameInfo(4);
	if (strcmp(gSaveInfo[save_year],"Unsaved"))
	{	
		AddText(Menu_Collection2, 107,32+150,"1."+gSaveInfo[save_month]+"/"+gSaveInfo[save_day]+"/"+gSaveInfo[save_year]+"");
		AddText(Menu_Collection2, 107,32+10+150,"  "+gSaveInfo[save_hour]+":"+gSaveInfo[save_minute]+"");	
	}
	else
	{
		AddText(Menu_Collection2, 107,32+150,"4. No Data");
	}
}

void iNewGame()
{
	gIsNewGame = 1;

	AddUpdate("CloseGUI");
	
	gFlags[FLAG_TELEPORTING] = 0;
	map_loading_atm_come_back_later = 1;
	gStartup = 0;
	WarpTo(29,18,"1-1.map");
}

void iGenerateMenuGlyphs()
{
	ClearCollection(Menu_Collection2);
	RemoveCollectionNum(20);
	
	AddGlyphList(Menu_Collection2, 10, 20, 150, 0);
	AddCollection(20);
}

void iQuitGame()
{
	Exit("");
}

void iSave()
{
	SaveGame(gGUI_Collections[gCurrentCollection][gCurrentSubCollection].uid);
	iGenerateMenuSave();
}

void iLoad()
{
	gStartup = 0;
	if (map_loading_atm_come_back_later)
	{
		return;
	}
	LoadGame(gGUI_Collections[gCurrentCollection][gCurrentSubCollection].uid);
}

void DoNothing(){}