#define MAX_ENTITIES 255

string gEntities[MAX_ENTITIES][1];
//0 = entity number
//1 = entity type

string gCurrentEntityIndex;
string gCurrentEntityType;

string gOtherEntityIndex;
string gOtherEntityType;

////////////////////////////////////////////////////////////////////////////////////////////

void AddEntity(int id, string Type)
{
	int i = 0;
	string Index;
	
	gCurrentEntityIndex = str(id);
	
	CallFunction("e" + Type + "Add");
	
	Index = gCurrentEntityIndex;
	
	while (!strcmp(gEntities[i][0],"-1"))
	{
		i++;
	}
	
	if (i < MAX_ENTITIES)
	{
		gEntities[i][0] = Index;
		gEntities[i][1] = Type;
	}
}

void RemoveEntity(int Index)
{
	gEntities[Index][0] = "-1";
	gEntities[Index][1] = "-1";
}

void ClearEntities()
{
	int i;
	
	for (i = 0; i < 255; i++)
	{
		gEntities[i][0] = "-1";
		gEntities[i][1] = "-1";
	}
}

////////////////////////////////////////////////////////////////////////////////////////////

struct ePlayer
{
	int id;
	int entity;
	
	int direction;
	
	int active;
}

#define MAX_PLAYERS 2

ePlayer ePlayers[MAX_PLAYERS];

void ePlayerUpdate()
{
	
}

void ePlayerTouch()
{
	
}

void ePlayerPush()
{
	
}

void ePlayerAdd()
{
	int i, index;
	
	for (i = 0; i < MAX_PLAYERS; i++)
	{
		if (ePlayers[i].active == -1)
		{
			index = i;
			
		}
	}
	
	ePlayers[index].id = GetNewId();
	ePlayers[index].entity = val(gCurrentEntityIndex);
	
	SetPlayer(ePlayers[index].entity);	
	
	gCurrentEntityIndex = str(index);
}

void ClearPlayer()
{
	int i;
	
	for (i = 0; i < MAX_PLAYERS; i++)
	{
		ePlayers[i].active = -1;
	}	
}



////////////////////////////////////////////////////////////////////////////////////////////

struct eCrate
{
	int id;
	int entity;
	
	int active;
}

#define MAX_CRATES 100
eCrate eCrates[MAX_CRATES];

void eCrateUpdate()
{
	
}

void eCrateTouch()
{
	
}

void eCratePush()
{
	
}

void eCrateUse()
{
	
}

void eCrateAdd()
{
	
}

void ClearCrate()
{
	int i;
	
	for (i = 0; i < MAX_CRATES; i++)
	{
		eCrates[i].active = -1;
	}
}

////////////////////////////////////////////////////////////////////////////////////////////

void ClearAll()
{
	ClearPlayer();
	ClearCrate();
}
